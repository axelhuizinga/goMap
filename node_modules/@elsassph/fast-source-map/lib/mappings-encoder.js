var MappingsEncoder = /** @class */ (function () {
    function MappingsEncoder(delegate) {
        this.column = 0;
        this.source = 0;
        this.sourceLine = 0;
        this.sourceColumn = 0;
        this.name = 0;
        this.delegate = delegate;
    }
    MappingsEncoder.prototype.encode = function (mappings) {
        for (var i = 0; i < mappings.length; i++) {
            var line = mappings[i];
            for (var j = 0; j < line.length; j++) {
                var mapping = line[j];
                switch (mapping.fieldCount) {
                    case 1:
                        this.write1(mapping);
                        break;
                    case 4:
                        this.write4(mapping);
                        break;
                    case 5:
                        this.write5(mapping);
                        break;
                    default:
                        missingFieldCount();
                }
                if (j < line.length - 1) {
                    // no trailing segment separator
                    this.separator();
                }
            }
            if (i < mappings.length - 1) {
                // skip trailing line separator
                this.newline();
            }
            this.column = 0;
        }
        return this.delegate.length;
    };
    MappingsEncoder.prototype.separator = function () {
        this.delegate.separator();
    };
    MappingsEncoder.prototype.newline = function () {
        this.delegate.newline();
    };
    MappingsEncoder.prototype.write5 = function (mapping) {
        this.delegate.write5(mapping.col - this.column, mapping.src - this.source, mapping.srcLine - this.sourceLine, mapping.srcCol - this.sourceColumn, mapping.name - this.name);
        this.column = mapping.col;
        this.source = mapping.src;
        this.sourceLine = mapping.srcLine;
        this.sourceColumn = mapping.srcCol;
        this.name = mapping.name;
    };
    MappingsEncoder.prototype.write4 = function (mapping) {
        this.delegate.write4(mapping.col - this.column, mapping.src - this.source, mapping.srcLine - this.sourceLine, mapping.srcCol - this.sourceColumn);
        this.column = mapping.col;
        this.source = mapping.src;
        this.sourceLine = mapping.srcLine;
        this.sourceColumn = mapping.srcCol;
    };
    MappingsEncoder.prototype.write1 = function (mapping) {
        this.delegate.write1(mapping.col - this.column);
        this.column = mapping.col;
    };
    return MappingsEncoder;
}());
export default MappingsEncoder;
function missingFieldCount() {
    throw new TypeError('mappings to encode require fieldCount');
}
//# sourceMappingURL=mappings-encoder.js.map