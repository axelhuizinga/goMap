/**
 * A function that concatenates source maps.
 *
 * Source maps are expected to be in the following format:
 *
 * ```js
 *   {
 *     version: <source-map version>,
 *     sources: [],
 *     sourcesContent: [],
 *     names: [],
 *     mappings: [
 *       [{
 *         col: <position in output line>,
 *         src: <position in sources array>,
 *         srcLine: <line within source>,
 *         srcCol: <column within source line>,
 *       }]
 *     ],
 *     file:
 *   }
 * ```
 */
export default function concat(maps) {
    var sources = maps.reduce(function (acc, map) {
        return acc.concat(map.sources);
    }, []);
    var sourcesContent = maps.reduce(function (acc, map) {
        return acc.concat(map.sourcesContent);
    }, []);
    var names = maps.reduce(function (acc, map) {
        return acc.concat(map.names);
    }, []);
    var srcOffset = 0;
    var nameOffset = 0;
    var mappings = maps.reduce(function (acc, map) {
        acc = acc.concat(map.mappings.map(function (lineMappings) {
            return lineMappings.map(function (mapping) { return ({
                col: mapping.col,
                fieldCount: mapping.fieldCount,
                name: mapping.name + nameOffset,
                src: mapping.src + srcOffset,
                srcCol: mapping.srcCol,
                srcLine: mapping.srcLine,
            }); });
        }));
        srcOffset += map.sources.length;
        nameOffset += map.names.length;
        return acc;
    }, []);
    return {
        file: '',
        mappings: mappings,
        names: names,
        sources: sources,
        sourcesContent: sourcesContent,
        version: '3',
    };
}
//# sourceMappingURL=concat.js.map